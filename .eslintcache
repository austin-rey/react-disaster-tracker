[{"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\reportWebVitals.js":"1","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\App.js":"2","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\Map.js":"3","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\LocationMarker.js":"4","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\loader.js":"5","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\Loader.js":"6","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\LocationInfoBox.js":"7","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\index.js":"8","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\RecentEvents.js":"9"},{"size":362,"mtime":1606495291126,"results":"10","hashOfConfig":"11"},{"size":2099,"mtime":1607970195739,"results":"12","hashOfConfig":"11"},{"size":1857,"mtime":1607969010424,"results":"13","hashOfConfig":"11"},{"size":3565,"mtime":1607973053073,"results":"14","hashOfConfig":"11"},{"size":259,"mtime":1606497383425,"results":"15","hashOfConfig":"11"},{"size":782,"mtime":1606684447924,"results":"16","hashOfConfig":"11"},{"size":1711,"mtime":1606591271362,"results":"17","hashOfConfig":"11"},{"size":288,"mtime":1606591375871,"results":"18","hashOfConfig":"11"},{"size":4029,"mtime":1607974441535,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tnz1cl",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\App.js",["43"],"import {useState, useEffect} from 'react';\n\nimport Map from './components/Map';\nimport RecentEvents from './components/RecentEvents';\nimport Loader from './components/Loader';\n\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport clsx from  'clsx';\n\nfunction App() {\n\n  const useStyles = makeStyles((theme) => ({\n    app: {\n      backgroundColor: '#F3F6F7',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column'\n    },\n    headerContainer: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    header: {\n      padding: '0',\n      margin: '0',\n      color: '#353535'\n    },\n    headerSubText: {\n      fontSize: '14px',\n      color: '#6D9395'\n    }\n  }));\n\n  const classes = useStyles();\n\n  const [eventData, setEventData] = useState([])\n  const [categoryData, setCategoryData] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      // All events that are open\n      const resEvents = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v3/events?status=open');\n      const { events } = await resEvents.json();\n      setEventData(events);\n\n      // All category types\n      const resCategories = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v3/categories');\n      const { categories } = await resCategories.json();\n      setCategoryData(categories);\n\n      setLoading(false);\n    }\n   \n    fetchData();\n    \n  }, [])\n\n  // Recent 10 events\n  let recentEvents = eventData.slice(0, 10);\n  \n  return (\n    <div className={clsx(\"app\",classes.app)}>\n        <header className={classes.headerContainer}>\n          <h1 className={classes.header}>Earth Event Tracker</h1>\n          <p className={classes.headerSubText}>(Powered By <a href=\"https://eonet.sci.gsfc.nasa.gov/\" target=\"_blank\">NASA EONET</a>)</p>\n        </header>\n        {!loading \n          ? <Map eventData={eventData}/> \n          : <Loader/>\n        }\n      <RecentEvents eventData={recentEvents} categoryData={categoryData}/>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\Map.js",["44"],"import {useState} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport GoogleMapReact from 'google-map-react';\r\nimport LocationMarker from './LocationMarker';\r\nimport LocationInfoBox from './LocationInfoBox';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    map: {\r\n        width: '90vw',\r\n        height: '90vh',\r\n        position: 'relative',\r\n        marginBottom: '20px'\r\n      }\r\n}))\r\n\r\nconst Map = ({eventData, center, zoom}) => {\r\n\r\n    console.log(eventData);\r\n    const classes = useStyles();\r\n\r\n    const [locationInfo, setLocationInfo] = useState(null);\r\n    \r\n    const markers = eventData.map(ev => {\r\n        if(ev.geometry[0].type === \"Point\") {\r\n            return <LocationMarker \r\n            lat={ev.geometry[0].coordinates[1]} \r\n            lng={ev.geometry[0].coordinates[0]} \r\n            onClick={()=>setLocationInfo(\r\n                {id:ev.id, \r\n                title:ev.title, \r\n                date:[...ev.geometry], \r\n                category:[...ev.categories]})\r\n            } \r\n            type={ev.categories[0].id}/>}\r\n        return;\r\n       \r\n    })\r\n    \r\n    return (\r\n        <div className={classes.map}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{key:'AIzaSyAk4FjfzWamVD5TTWXFWJbLcPx9WQViyFQ'}}\r\n                defaultCenter={center}\r\n                defaultZoom={zoom}\r\n            >\r\n                {markers}\r\n            </GoogleMapReact>\r\n            {locationInfo && <LocationInfoBox id= {locationInfo.id} title={locationInfo.title} date={locationInfo.date} category={locationInfo.category}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nMap.defaultProps = {\r\n    center: {\r\n        lat: 42.3265,\r\n        lng: -122.8756\r\n    },\r\n    zoom: 6\r\n}\r\n\r\nMap.propTypes = {\r\n    eventData: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Map\r\n","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\LocationMarker.js",[],"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\loader.js",[],"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\Loader.js",[],"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\LocationInfoBox.js",["45","46"],"import PropTypes from 'prop-types';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Card,CardActions,CardContent,CardHeader,Avatar } from '@material-ui/core';\r\n\r\nimport LocationMarker from './LocationMarker'\r\n\r\nimport Moment from 'react-moment';\r\nconst useStyles = makeStyles((theme) => ({\r\n      root: {\r\n        display: 'flex'\r\n      },\r\n      cardContainer: {\r\n        borderRadius: '0px',\r\n        margin: '10px',\r\n        position: 'absolute',\r\n        top: '20px',\r\n        left: '20px',\r\n        width: '500px',\r\n\r\n      },\r\n      cardHeader: {\r\n         backgroundColor: '#D9D9D9',\r\n         color: '#353535'\r\n      },\r\n      avatar: {\r\n        backgroundColor: 'transparent'\r\n      },\r\n      locationInfoList: {\r\n        listStyleType: 'none',\r\n        padding: 0\r\n      },\r\n      \r\n      locationInfoListItem: {\r\n        padding:' 5px 0'\r\n      }\r\n}));\r\n\r\nconst LocationInfoBox = ({id, title,date,category}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.cardContainer} raised={true}>\r\n            <CardHeader className={classes.header}\r\n                avatar={\r\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                    <LocationMarker type={category[0].id}/>\r\n                </Avatar>\r\n                }\r\n                title={title}\r\n                subheader={<Moment format=\"YYYY/MM/DD - hh:mm:ss\">{date[0].date}</Moment>}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n\r\nLocationInfoBox.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    date: PropTypes.array.isRequired,\r\n    category: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default LocationInfoBox\r\n","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\index.js",[],["47","48"],"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\RecentEvents.js",["49","50","51","52"],"import PropTypes from 'prop-types'\r\n\r\nimport {useState,useEffect} from 'react';\r\n\r\nimport {Card,CardHeader,CardContent,List,ListItem,ListItemText,Divider } from '@material-ui/core';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport LocationMarker from './LocationMarker';\r\n\r\nimport Moment from 'react-moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex'\r\n    },\r\n    recentEventsContainer: {\r\n        width: '90vw',\r\n        maxWidth:'900px',\r\n        position: 'relative',\r\n    },\r\n    cardContainer: {\r\n        borderRadius: '0px',\r\n    },\r\n    cardHeader: {\r\n       backgroundColor: '#9EB7B8',\r\n       color: '#fff'\r\n    },\r\n    eventListItem: {\r\n        display: 'flex',\r\n        flexDirection:\"column\",\r\n        alignItems: 'flex-start',\r\n        borderLeft: '1px solid #BEE3DB',\r\n        marginLeft: '10px',\r\n    },\r\n    listItemText:{\r\n        // borderBottom: '1px solid #efefef',\r\n    },\r\n    cardActions: {\r\n        justifyContent: 'flex-end',\r\n        flexDirection: 'row'\r\n    },\r\n    headerContainer: {\r\n        padding: '20px',\r\n        textAlign: 'center'\r\n      },\r\n      header: {\r\n        padding: '0',\r\n        margin: '0',\r\n        color: '#353535'\r\n      },\r\n}));\r\n\r\nconst RecentEvents = ({eventData,categoryData}) => {\r\n    const classes = useStyles();\r\n\r\n    // const [categorizedEvents, setCategorizedEvents] = useState([]);\r\n    // useEffect(() => {\r\n    //     const getEventsByCategory = () =>{\r\n    //         categoryData.forEach(async (cat) => {\r\n    //             const eventsByCategory = await fetch(`https://eonet.sci.gsfc.nasa.gov/api/v3/categories/${cat.id}`);\r\n    //             const res = await eventsByCategory.json();\r\n    //             setCategorizedEvents(categorizedEvents => [...categorizedEvents, res]);\r\n    //         })\r\n    //     }\r\n    //     getEventsByCategory();\r\n    // },[categoryData])\r\n\r\n    // const categories = categorizedEvents.map((category => {\r\n    //     return <Card className={classes.cardContainer} variant=\"outlined\">\r\n    //     <CardHeader\r\n    //         className={classes.cardHeader}\r\n    //         title={category.title.replace('EONET Events: ','')}\r\n    //         subheader={category.description}\r\n    //     />\r\n    //     <CardContent>\r\n    //         <List>\r\n    //             <ListItem className={classes.eventListItem}>\r\n    //             {\r\n    //             category.events.map((event,index)=> {\r\n    //                return <ListItemText className={classes.listItemText} primary={event.title} secondary={<Moment format=\"YYYY/MM/DD - hh:mm:ss\">{event.geometry[0].date}</Moment>}/>\r\n    //         })}\r\n    //         {category.events.length == 0 && <p className=\"no-results\">No events found.</p>}\r\n    //             </ListItem>\r\n            \r\n    //         </List>\r\n    //     </CardContent>\r\n    // </Card>\r\n    // }));\r\n\r\n    const recent = eventData.map((resEvent) => {       \r\n        return <ListItem className={classes.eventListItem}>\r\n            <LocationMarker type={resEvent.categories[0].id}/>\r\n            <ListItemText className={classes.listItemText} primary={resEvent.title} secondary={<Moment format=\"YYYY/MM/DD - hh:mm:ss\">{resEvent.geometry[0].date}</Moment>}/>\r\n        </ListItem>\r\n    }); \r\n\r\n    return (\r\n    <div className={classes.recentEventsContainer}>\r\n        <header className={classes.headerContainer}>\r\n            <h2 className={classes.header}>Recent Events</h2>\r\n            <p></p>\r\n        </header>\r\n        <Card className={classes.cardContainer} variant=\"outlined\">\r\n            {/* <CardHeader\r\n                className={classes.cardHeader}\r\n                title='Title'\r\n                subheader='Sub Title'\r\n            /> */}\r\n            <CardContent>\r\n                <List>\r\n                {recent}\r\n                </List>\r\n            </CardContent>\r\n        </Card>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nRecentEvents.propTypes = {\r\n    eventData: PropTypes.array,\r\n    categoryData: PropTypes.array\r\n}\r\n\r\nexport default RecentEvents;\r\n",{"ruleId":"53","severity":1,"message":"54","line":70,"column":103,"nodeType":"55","endLine":70,"endColumn":118},{"ruleId":"56","severity":1,"message":"57","line":39,"column":9,"nodeType":"58","messageId":"59","endLine":39,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":5,"column":14,"nodeType":"62","messageId":"63","endLine":5,"endColumn":25},{"ruleId":"60","severity":1,"message":"64","line":5,"column":26,"nodeType":"62","messageId":"63","endLine":5,"endColumn":37},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"60","severity":1,"message":"69","line":3,"column":9,"nodeType":"62","messageId":"63","endLine":3,"endColumn":17},{"ruleId":"60","severity":1,"message":"70","line":3,"column":18,"nodeType":"62","messageId":"63","endLine":3,"endColumn":27},{"ruleId":"60","severity":1,"message":"71","line":5,"column":14,"nodeType":"62","messageId":"63","endLine":5,"endColumn":24},{"ruleId":"60","severity":1,"message":"72","line":5,"column":64,"nodeType":"62","messageId":"63","endLine":5,"endColumn":71},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'CardContent' is defined but never used.","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'CardHeader' is defined but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation"]