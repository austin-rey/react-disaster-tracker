[{"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\reportWebVitals.js":"1","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\App.js":"2","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\Map.js":"3","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\LocationMarker.js":"4","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\loader.js":"5","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\Loader.js":"6","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\LocationInfoBox.js":"7","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\EventsByCategories.js":"8"},{"size":362,"mtime":1606495291126,"results":"9","hashOfConfig":"10"},{"size":1913,"mtime":1606590301372,"results":"11","hashOfConfig":"10"},{"size":1445,"mtime":1606589583897,"results":"12","hashOfConfig":"10"},{"size":3457,"mtime":1606587424983,"results":"13","hashOfConfig":"10"},{"size":259,"mtime":1606497383425,"results":"14","hashOfConfig":"10"},{"size":259,"mtime":1606497383425,"results":"15","hashOfConfig":"10"},{"size":1709,"mtime":1606589794116,"results":"16","hashOfConfig":"10"},{"size":2776,"mtime":1606516638826,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tnz1cl",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\App.js",[],"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\Map.js",["38"],"import {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport GoogleMapReact from 'google-map-react'\r\nimport LocationMarker from './LocationMarker'\r\nimport LocationInfoBox from './LocationInfoBox'\r\n\r\nconst Map = ({eventData, center, zoom}) => {\r\n\r\n    const [locationInfo, setLocationInfo] = useState(null);\r\n    \r\n    const markers = eventData.map(ev => {\r\n        if(ev.geometries[0].type === \"Point\") {\r\n            return <LocationMarker lat={ev.geometries[0].coordinates[1]} lng={ev.geometries[0].coordinates[0]} onClick={()=>setLocationInfo({id:ev.id, title:ev.title, date:[...ev.geometries], category:[...ev.categories]})} type={ev.categories[0].id}/> \r\n        }\r\n        return;\r\n       \r\n    })\r\n\r\n    console.log(locationInfo)\r\n    return (\r\n        <div className=\"map\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{key:'AIzaSyAk4FjfzWamVD5TTWXFWJbLcPx9WQViyFQ'}}\r\n                defaultCenter={center}\r\n                defaultZoom={zoom}\r\n            >\r\n                {markers}\r\n            </GoogleMapReact>\r\n            {locationInfo && <LocationInfoBox id= {locationInfo.id} title={locationInfo.title} date={locationInfo.date} category={locationInfo.category}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nMap.defaultProps = {\r\n    center: {\r\n        lat: 42.3265,\r\n        lng: -122.8756\r\n    },\r\n    zoom: 6\r\n}\r\n\r\nMap.propTypes = {\r\n    eventData: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Map\r\n","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\LocationMarker.js",[],"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\loader.js",[],"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\Loader.js",[],["39","40"],"C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\LocationInfoBox.js",["41","42"],"import PropTypes from 'prop-types';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Card,CardActions,CardContent,CardHeader,Avatar } from '@material-ui/core';\r\nimport LocationMarker from './LocationMarker'\r\n\r\nimport Moment from 'react-moment';\r\nconst useStyles = makeStyles((theme) => ({\r\n      root: {\r\n        display: 'flex'\r\n      },\r\n      cardContainer: {\r\n        borderRadius: '0px',\r\n        margin: '10px',\r\n        position: 'absolute',\r\n        top: '20px',\r\n        left: '20px',\r\n        width: '500px',\r\n\r\n      },\r\n      cardHeader: {\r\n         backgroundColor: '#D9D9D9',\r\n         color: '#353535'\r\n      },\r\n      avatar: {\r\n        backgroundColor: 'transparent'\r\n      },\r\n      locationInfoList: {\r\n        listStyleType: 'none',\r\n        padding: 0\r\n      },\r\n      \r\n      locationInfoListItem: {\r\n        padding:' 5px 0'\r\n      }\r\n}));\r\n\r\nconst LocationInfoBox = ({id, title,date,category}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.cardContainer} raised={true}>\r\n            <CardHeader className={classes.header}\r\n                avatar={\r\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                    <LocationMarker type={category[0].id}/>\r\n                </Avatar>\r\n                }\r\n                title={title}\r\n                subheader={<Moment format=\"YYYY/MM/DD - hh:mm:ss\">{date[0].date}</Moment>}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n\r\nLocationInfoBox.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    date: PropTypes.array.isRequired,\r\n    category: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default LocationInfoBox\r\n","C:\\Users\\austi\\Desktop\\React 2020\\react-disaster-tracker\\src\\components\\EventsByCategories.js",["43","44"],"import PropTypes from 'prop-types'\r\nimport {useState,useEffect} from 'react';\r\n\r\nimport {Card,CardHeader,CardContent,List,ListItem,ListItemText,Divider } from '@material-ui/core';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport Moment from 'react-moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex'\r\n    },\r\n    cardContainer: {\r\n        borderRadius: '0px',\r\n        margin: '10px'\r\n    },\r\n    cardHeader: {\r\n       backgroundColor: '#D9D9D9',\r\n       color: '#353535'\r\n    },\r\n    eventListItem: {\r\n        display: 'flex',\r\n        flexDirection:\"column\",\r\n        alignItems: 'flex-start',\r\n        borderLeft: '1px solid #BEE3DB',\r\n        marginLeft: '10px',\r\n    },\r\n    listItemText:{\r\n        // borderBottom: '1px solid #efefef',\r\n    },\r\n    cardActions: {\r\n        justifyContent: 'flex-end',\r\n        flexDirection: 'row'\r\n    }\r\n}));\r\n\r\nconst EventsByCategories = ({eventData,categoryData}) => {\r\n    const classes = useStyles();\r\n\r\n    const [categorizedEvents, setCategorizedEvents] = useState([]);\r\n    useEffect(() => {\r\n        const getEventsByCategory = () =>{\r\n            categoryData.forEach(async (cat) => {\r\n                const eventsByCategory = await fetch(`https://eonet.sci.gsfc.nasa.gov/api/v2.1/categories/${cat.id}`);\r\n                const res = await eventsByCategory.json();\r\n                setCategorizedEvents(categorizedEvents => [...categorizedEvents, res]);\r\n            })\r\n        }\r\n        getEventsByCategory();\r\n    },[categoryData])\r\n\r\n    const categories = categorizedEvents.map((category => {\r\n\r\n        return <Card className={classes.cardContainer} variant=\"outlined\">\r\n        <CardHeader\r\n            className={classes.cardHeader}\r\n            title={category.title.replace('EONET Events: ','')}\r\n            subheader={category.description}\r\n        />\r\n        <CardContent>\r\n            <List>\r\n                <ListItem className={classes.eventListItem}>\r\n                {\r\n                category.events.map((event,index)=> {\r\n                   return <ListItemText className={classes.listItemText} primary={event.title} secondary={<Moment format=\"YYYY/MM/DD - hh:mm:ss\">{event.geometries[0].date}</Moment>}/>\r\n            })}\r\n            {category.events.length == 0 && <p className=\"no-results\">No events found.</p>}\r\n                </ListItem>\r\n            \r\n            </List>\r\n        </CardContent>\r\n    </Card>\r\n    }));\r\n\r\n    return (\r\n    <div>\r\n        <header className=\"header\">\r\n            <h2>Events by Category</h2>\r\n\r\n        </header>\r\n        {categories}\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nEventsByCategories.propTypes = {\r\n    eventData: PropTypes.array,\r\n    categoryData: PropTypes.array\r\n}\r\n\r\nexport default EventsByCategories;\r\n",{"ruleId":"45","severity":1,"message":"46","line":16,"column":9,"nodeType":"47","messageId":"48","endLine":16,"endColumn":16},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":5,"column":14,"nodeType":"55","messageId":"56","endLine":5,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":5,"column":26,"nodeType":"55","messageId":"56","endLine":5,"endColumn":37},{"ruleId":"53","severity":1,"message":"58","line":4,"column":64,"nodeType":"55","messageId":"56","endLine":4,"endColumn":71},{"ruleId":"59","severity":1,"message":"60","line":68,"column":37,"nodeType":"61","messageId":"62","endLine":68,"endColumn":39},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'CardContent' is defined but never used.","'Divider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]